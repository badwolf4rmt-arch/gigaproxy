

import os, json, requests

# === –ü–û–õ–£–ß–ê–ï–ú –ù–û–í–´–ô –¢–û–ö–ï–ù ===
OAUTH_URL = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
client_id = os.getenv("GIGACHAT_CLIENT_ID")
client_secret = os.getenv("GIGACHAT_CLIENT_SECRET")

print("üîê –ü–æ–ª—É—á–∞—é –Ω–æ–≤—ã–π access_token...")
r = requests.post(
    OAUTH_URL,
    headers={"Authorization": f"Basic {client_id}:{client_secret}"},
    data={"scope": "GIGACHAT_API_CORP"},
    verify=False
)
token = r.json().get("access_token")
if not token:
    raise Exception("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω: " + r.text)
print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")

# === –û–°–ù–û–í–ù–û–ô –ó–ê–ü–†–û–° ===
API_URL = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
headers = {"Authorization": f"Bearer {token}", "Content-Type": "application/json"}
payload = {
    "model": "GigaChat-2-Max",
    "scope": "GIGACHAT_API_CORP",
    "messages": [{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç, –∫—Ç–æ —Ç—ã?"}],
    "max_tokens": 512,
}

print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ GigaChat...")
r = requests.post(API_URL, headers=headers, json=payload, verify=False)
print("–û—Ç–≤–µ—Ç:", r.status_code, r.text)

with open("result.json", "w", encoding="utf-8") as f:
    json.dump(r.json(), f, ensure_ascii=False, indent=2)

if __name__ == "__main__":
    main()
